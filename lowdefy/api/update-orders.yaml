id: update-orders
type: PageSiderMenu
properties:
  title: Update Orders
  Breadcrumb:
   list:
    - Admin
    - Update Orders
actions:
  onEnter:
    - id: set_initial
      type: setState()
      params: 
        initial: true
    - id: fetch_api_info
      type: fetch()
      params: api_info
    - id: set_api_info
      type: setState()
      params:
        api_info:
          _get:
            key: '0'
            on:
              _request: api_info
requests:
  - id: api_info
    type: MongoDBAggregation
    connectionId: api_calls_mdb
    properties:
      pipeline:
        - $match:
            endpoint: orders
        - $sort:
            timestamp: -1
        - $limit: 1
        - $project:
            _id: 0
            timestamp: 1
            initial:
              $literal:
                _state: initial
            page_info:
              $regexFind:
                input: $headers.link
                regex: <https:\/\/.*\.com\/admin\/api\/2020-01\/orders\.json\?limit=.*&page_info=(.*)>; rel="next"
        - $addFields:
            page_info:
              $arrayElemAt:
                - $page_info.captures
                - 0
        - $lookup:
            from: orders
            let: {}
            pipeline:
              - $group:
                  _id: 0
                  max_id:
                    $max: $_id
                  count:
                    $sum: 1
            as: orders
        - $unwind:
            path: $orders
            preserveNullAndEmptyArrays: true
        - $project:
            last_fetched:
              $dateToString:
                date: $timestamp
            initial: 1
            page_info: 1
            count: $orders.count
            max_id:
              $ifNull:
                - $orders.max_id
                - 1
            page:
              $and:
                - $not:
                    - $initial
                - $ne:
                    - $page_info
                    - null

  - id: get_orders_count
    type: AxiosHttp
    connectionId: shopify_orders_count
    properties: {}

mutations:
  - id: get_orders
    type: AxiosHttp
    connectionId: shopify_orders
    properties:
      params:
        _if:
          test:
            _eq:
              - _state: api_info.page
              - true
          then:
            limit: 250
            page_info:
              _state: api_info.page_info
          else:
            limit: 250
            status: any
            since_id:
              _if:
                test:
                  _eq:
                    - _state: api_info
                    - null
                then:
                  1
                else:
                  _state: api_info.max_id

  - id: insert_data
    type: MongoDBInsertMany
    connectionId: orders_temp_mdb
    properties:
      docs:
        _state: data 
  - id: transform_data
    type: MongoDBAggregation
    connectionId: orders_temp_mdb
    properties:
      pipeline:
        - $addFields:
            _id: '$id'
            closed_at_date:
              $dateFromString: 
                dateString: $closed_at
                format: '%Y-%m-%dT%H:%M:%S%z'
            created_at_date:
              $dateFromString: 
                dateString: $created_at
                format: '%Y-%m-%dT%H:%M:%S%z'
            updated_at_date:
              $dateFromString: 
                dateString: $updated_at
                format: '%Y-%m-%dT%H:%M:%S%z'
            cancelled_at_date:
              $dateFromString: 
                dateString: $cancelled_at_at
                format: '%Y-%m-%dT%H:%M:%S%z'
        - $merge: 
            into: orders

  - id: clear_temp_collection
    type: MongoDBAggregation
    connectionId: orders_temp_mdb
    properties:
      pipeline:
        # this is hacky yes
        - $match:
            sandaklncmnasklmz: ncakdjcnaskmxz
        - $out: orders_temp

  - id: insert_api_call
    type: MongoDBInsertOne
    connectionId: api_calls_mdb
    properties:
      doc:
        endpoint: orders
        headers:
          _state: headers
        timestamp:
          _date: now
        api_info:
          _state: api_info
        params:
          _if:
            test:
              _eq:
                - _state: api_info.page
                - true
            then:
              limit: 250
              page_info:
                _state: api_info.page_info
            else:
              limit: 250
              status: any
              since_id:
                _if:
                  test:
                    _eq:
                      - _state: api_info
                      - null
                  then:
                    1
                  else:
                    _state: api_info.max_id
blocks:
  - id: content
    type: Card
    blocks:
      - id: title
        type: Title
        properties:
          content: Fetch Orders by ID
          level: 3
      - id: description
        type: Descriptions
        properties:
          column: 1
          items:
            - label: Last Fetched
              value:
                _state: api_info.last_fetched
            - label: Shopify Orders
              value:
                _get:
                    key: 'data.count'
                    on:
                      _request: get_orders_count
            - label: Database Orders
              value:
                _state: api_info.count

      - id: fetch
        type: Button
        properties:
          title: Fetch
          block: true
          disabled:
            _and:
              - _not:
                  _state: initial
              - _not:
                  _state: api_info.page                
        actions:
          onClick:
            - id: get_orders
              type: mutate()
              params: get_orders
            - id: set
              type: setState()
              params:
                data:
                  _get:
                    key: 'data.orders'
                    on:
                      _mutation: get_orders
                headers:
                  _get:
                    key: 'headers'
                    on:
                      _mutation: get_orders
            - id: insert_data
              type: mutate()
              params: insert_data
            - id: transform_data
              type: mutate()
              params: transform_data
            - id: clear_temp_collection
              type: mutate()
              params: clear_temp_collection
            - id: insert_api_call
              type: mutate()
              params: insert_api_call  
            - id: set_initial
              type: setState()
              params: 
                initial: false
            - id: fetch_api_info
              type: fetch()
              params: api_info
            - id: set_api_info
              type: setState()
              params: 
                api_info:
                  _get:
                    key: '0'
                    on:
                      _request: api_info